<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sqs:config name="Amazon_SQS_Configuration2" doc:name="Amazon SQS Configuration" doc:id="8625d10d-e2c4-4698-8a42-77575dd9f18e" defaultQueueUrl="https://sqs.eu-north-1.amazonaws.com/843981437160/Book_Purchase" >
		<sqs:basic-connection testQueueArn="arn:aws:sqs:eu-north-1:843981437160:Book_Purchase" accessKey="${aws_sqs_accessKey}" secretKey="${aws_sqs_secretKey}" region="${aws_sqs_region}" />
	</sqs:config>
	<configuration-properties doc:name="Configuration properties" doc:id="19991572-cfb4-4779-9662-06912c51142d" file="config.yaml" />
	<flow name="book-purchase-awsFlow" doc:id="9cfd0ee8-9bc8-4440-a0f7-77e7c2f49182" >
		<sqs:receivemessages doc:name="Receive messages" doc:id="646e971e-8e65-416b-933c-4b0396880ead" config-ref="Amazon_SQS_Configuration2" queueUrl="https://sqs.eu-north-1.amazonaws.com/843981437160/Book_Purchase"/>
		<logger level="INFO" doc:name="Logger" doc:id="fec7182f-e7b5-4753-93d1-1e071e95ca87" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="6d01a387-568c-4db3-bd7c-9362531ac016" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var jsonPayload = read(payload, "application/json") 
---
{
    "bookId": jsonPayload.bookId,
    "quantity": jsonPayload.quantity,
    "referenceId": jsonPayload.referenceId,
    "timestamp": jsonPayload.timestamp
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="673b67b3-0579-45bc-ab2c-90202829deaf" message="#[payload]"/>
		<set-variable value="#[payload.bookId]" doc:name="Set Variable" doc:id="8fb82a7c-9aa6-4638-8309-b80fba8c5d8b" variableName="id"/>
		<set-variable value="#[payload.quantity]" doc:name="Set Variable" doc:id="b7c8b73d-d3a0-4f07-abc3-989fe8f0e031" variableName="purchaseQty"/>
		<db:select doc:name="Select" doc:id="88858ea3-3ab8-4a95-b630-c969c33416d8" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from books where id= :id;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="feeb24f6-e921-4caa-9e67-168db7e89afb" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="7b7e0a00-4226-4138-ba41-dbe7482b9587" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var books = payload
 ---
 books map ((book) -> {
                "id": book.id,
                "quantity": book.QUANTITY,
                "timestamp": book.last_updated
            })]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="d1bcc01b-80fd-4a70-8b52-80cb676f81d1" >
			<when expression="#[payload[0].quantity&gt;=vars.purchaseQty]">
				<logger level="INFO" doc:name="Logger" doc:id="5d3122b7-aa10-4b77-806c-b3c114c66a42" message='"Sufficient Quantity Aavailable go with the purchase " #[payload.quantity]'/>
			</when>
			<otherwise>
				<raise-error doc:name="Raise error" doc:id="dc31fcd2-8356-4846-8226-320c4014022f" type="CUSTOM:NOT_FOUND"/>
				<logger level="INFO" doc:name="Logger" doc:id="7aaeeae8-cfe8-4377-b00d-8586752a3c68" message="Book not available flow stopped"/>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="7da555e9-cfef-47b9-9d11-19bfa7517bb1" message="#[payload.quantity]" />
		<db:update doc:name="Update" doc:id="3a6f5094-a61b-4248-b148-29723bfbd34d" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE books SET quantity = quantity - :purchaseQuantity, last_updated = CURRENT_TIMESTAMP 
WHERE id = :bookId AND quantity >= :purchaseQuantity]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bookId: vars.id as Number,
	purchaseQuantity: vars.purchaseQty
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="a2f341ce-5360-4e52-bedc-a29a9c4908b4" message="#[payload]"/>
		<logger level="INFO" doc:name="Logger" doc:id="5494e6df-ff97-4abd-b742-2e21a1395dea" message="Books are reduced in database"/>
	</flow>
</mule>
