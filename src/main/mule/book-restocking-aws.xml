<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sqs:config name="Amazon_SQS_Configuration1" doc:name="Amazon SQS Configuration" doc:id="e6d974f1-5253-499d-a354-e3583607483c" defaultQueueUrl="https://sqs.eu-north-1.amazonaws.com/843981437160/Book_Restock" >
		<sqs:basic-connection testQueueArn="arn:aws:sqs:eu-north-1:843981437160:Book_Restock" accessKey="${aws_sqs_accessKey}" secretKey="${aws_sqs_secretKey}" region="${aws_sqs_region}" />
	</sqs:config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="1ae3bedd-1270-4ac8-a9e1-a9d908a99f5a" >
		<db:generic-connection url="jdbc:h2:tcp://localhost/~/book_inventory" driverClassName="org.h2.Driver" user="sa" />
	</db:config>
	<flow name="book-restocking-awsFlow" doc:id="1f288392-e03c-4d4c-b1e2-65ac8b0c9698" >
		<sqs:receivemessages doc:name="Receive messages" doc:id="ccc386b1-97eb-4d1d-9cca-adbb4ffaa9b8" config-ref="Amazon_SQS_Configuration1" queueUrl="https://sqs.eu-north-1.amazonaws.com/843981437160/Book_Restock"/>
		<logger level="INFO" doc:name="Logger" doc:id="2b3b657d-4fe1-417a-92b8-d142473826a9" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="b21cd5ba-73f9-4b9e-92bd-d763085e11ca">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var jsonPayload = read(payload, "application/json")
---
{
    "id": jsonPayload.id as Number,
    "restockQuantity": jsonPayload.restockQuantity as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload.id as Number]" doc:name="Set Variable" doc:id="3c4b99f8-4fb7-414a-a0cb-3e424eb0236d" variableName="id" />
		<set-variable value="#[payload.restockQuantity as Number]" doc:name="Set Variable" doc:id="844a2761-84cc-4828-8d2e-0594a65db3bd" variableName="restockQty" />
		<db:select doc:name="Select" doc:id="d7f01da6-37cd-4e02-87f2-0b59241b861a" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM books WHERE id = :id;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="5a7d3a82-0191-42ce-8315-144564e06f21" message="#[payload]" />
		<choice doc:name="Choice" doc:id="ab4c1f66-8e84-417a-a750-f4b62b1c2594" >
			<when expression="#[sizeOf(payload) &gt; 0]">
				<logger level="INFO" doc:name="Logger" doc:id="2406d1a6-67e8-492d-ad24-6700c11494d3" message='Book is available in database, go with restocking'/>
			</when>
			<otherwise >
				<raise-error doc:name="Raise error" doc:id="39dd5eee-c0b2-4a1e-86e3-6ce8a5c6e069" type="CUSTOM:NOT_FOUND"/>
				<logger level="INFO" doc:name="Logger" doc:id="38e5f8f3-2a06-4985-b512-00fb776d0f83" message="Books not available in database" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="c4c6231e-e27a-4ec8-94ef-55d4e1f92877" message="#[payload.restockQuantity]"/>
		<db:update doc:name="Update" doc:id="a319f616-b0cd-4e58-9ec5-b338a6dbb164" config-ref="Database_Config">
					<db:sql><![CDATA[
UPDATE books SET quantity = quantity + :restockQuantity WHERE id = :id;]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	id: vars.id as Number,
     restockQuantity: vars.restockQty as Number
}]]]></db:input-parameters>
				</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="2a499766-f70d-4a74-ae42-089344f9b290" message='"Restock successful. New quantity updated for book ID: " #[vars.id]'/>
	</flow>
</mule>
